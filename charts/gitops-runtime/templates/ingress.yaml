{{- if .Values.global.runtime.ingress.enabled -}}
{{- $svcName := include "internal-router.fullname" (dict "Values" (get .Values "internal-router")) -}}
{{- $svcPort := get (get .Values "internal-router") "service.port"   -}}
{{- if and .Values.global.runtime.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.global.runtime.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.global.runtime.ingress.annotations "kubernetes.io/ingress.class" .Values.global.runtime.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: codefresh-gitops-runtime
  labels:
    {{- include "codefresh-gitops-runtime.labels" . | nindent 4 }}
  {{- with .Values.global.runtime.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.global.runtime.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.global.runtime.ingress.className }}
  {{- end }}
  {{- if .Values.global.runtime.ingress.tls }}
  tls:
    {{- range .Values.global.runtime.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.global.runtime.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
        - backend:
            service:
              name: internal-router
              port:
                number: 80
          path: /webhooks
          pathType: Prefix
      {{- if (index (get $.Values "argo-workflows") "enabled") }}
        - backend:
            service:
              name: internal-router
              port:
                number: 80
          path: /workflows
          pathType: Prefix
        {{- end }}
        - backend:
            service:
              name: internal-router
              port:
                number: 80
          path: /app-proxy
          pathType: Prefix
    {{- end }}
{{- end }}