{{- define "internal-router.resources.configmap" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: internal-router-config
data:
  default.conf.template: |
    server {
      listen 8080;
      access_log /dev/stdout main;
      error_log /dev/stdout;

      {{- if .Values.resolver }}
      resolver {{ .Values.resolver }} valid=10s;
      {{- else }}
      resolver {{ .Values.dnsService }}.{{ .Values.dnsNamespace }}.svc.{{ .Values.clusterDomain }} valid=10s;
      {{- end }}

      location /app-proxy {
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        chunked_transfer_encoding off;

        proxy_pass {{ index (get .Values.routing "app-proxy") "internalUrl" }};
      }

      {{- if .Values.routing.workflows.enabled }}
      location /workflows/ {
        # sse
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;

        proxy_pass {{ .Values.routing.workflows.internalUrl }};
      }
      {{- end }}

      location ~ /webhooks/([^/]+)/([^/]+) {
        proxy_pass http://$2-eventsource-svc.$1.svc.cluster.local;
      }

      location /readyz {
        return 200 'ok';
      }

      location /healthz {
        return 200 'ok';
      }
    }
{{- end }}