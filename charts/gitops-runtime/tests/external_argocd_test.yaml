suite: Test External ArgoCD with GitOps Runtime
templates:
  - app-proxy/config.yaml
  - app-proxy/deployment.yaml
tests:
  - it: app-proxy ConfigMap with external ArgoCD
    values:
      - ./values/mandatory-values-ingress.yaml
      - ./values/external-argocd-values.yaml
    template: app-proxy/config.yaml
    set:
      gitops-operator.libraryMode: false
    asserts:
      - equal:
          path: data.argoCdUrl
          value: http://my-argocd-server
      - equal:
          path: data.argoCdUsername
          value: admin
  
  - it: app-proxy ConfigMap with external ArgoCD (override username)
    values:
      - ./values/mandatory-values-ingress.yaml
      - ./values/external-argocd-values.yaml
    template: app-proxy/config.yaml
    set:
      gitops-operator.libraryMode: false
      global.external-argo-cd.username: adminoverride
    asserts:
      - equal:
          path: data.argoCdUsername
          value: adminoverride
      - equal:
          path: data.isExternalArgoCD
          value: "true"

  - it: ARGO_CD_PASSWORD env var in app-proxy Deployment (set via passwordSecretKeyRef)
    values:
      - ./values/mandatory-values-ingress.yaml
      - ./values/external-argocd-values.yaml
    template: app-proxy/deployment.yaml
    set:
      gitops-operator.libraryMode: false
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ARGO_CD_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: argocd-initial-admin-secret

  - it: ARGO_CD_PASSWORD env var in app-proxy Deployment (set via password plain text)
    values:
      - ./values/mandatory-values-ingress.yaml
      - ./values/external-argocd-values.yaml
    template: app-proxy/deployment.yaml
    set:
      gitops-operator.libraryMode: false
      global.external-argo-cd.passwordSecretKeyRef: []
      global.external-argo-cd.password: token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ARGO_CD_PASSWORD
            valueFrom:
              secretKeyRef:
                key: token
                name: gitops-runtime-argo-cd-password

  - it: ARGO_CD_USERNAME env var in app-proxy Deployment (set via username)
    values:
      - ./values/mandatory-values-ingress.yaml
      - ./values/external-argocd-values.yaml
    template: app-proxy/deployment.yaml
    set:
      gitops-operator.libraryMode: false
      global.external-argo-cd.username: adminoverride
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ARGO_CD_USERNAME
            value: adminoverride

  - it: ARGO_CD_TOKEN env var in app-proxy Deployment (set via tokenSecretKeyRef)
    values:
      - ./values/mandatory-values-ingress.yaml
      - ./values/external-argocd-values.yaml
    template: app-proxy/deployment.yaml
    set:
      gitops-operator.libraryMode: false
      global.external-argo-cd.auth.type: token
      global.external-argo-cd.tokenSecretKeyRef.name: my-argocd-secret
      global.external-argo-cd.tokenSecretKeyRef.key: my-token
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ARGO_CD_TOKEN
            valueFrom:
              secretKeyRef:
                key: my-token
                name: my-argocd-secret

  - it: ARGO_CD_TOKEN env var in app-proxy Deployment (set via token)
    values:
      - ./values/mandatory-values-ingress.yaml
      - ./values/external-argocd-values.yaml
    template: app-proxy/deployment.yaml
    set:
      gitops-operator.libraryMode: false
      global.external-argo-cd.auth.type: token
      global.external-argo-cd.token: "plaintexttoken"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ARGO_CD_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: argocd-token
