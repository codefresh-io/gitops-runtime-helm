suite: Test on event reporters sensors
templates:
  - event-reporters/workflow-reporter/sensor.yaml
  - event-reporters/rollout-reporter/sensor.yaml
tests:
  - it: Setting api/events url works - workflow reporter
    template: 'event-reporters/workflow-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      global.codefresh.url: "https://my.platform"
      global.codefresh.apiEventsPath: "/api-events"
    asserts:
    - equal:
        path: spec.triggers[0].template.http.url
        value: https://my.platform/api-events

  - it: Setting api/events url works - rollout reporter
    template: 'event-reporters/rollout-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      global.codefresh.url: "https://my.platform"
      global.codefresh.apiEventsPath: "/api-events"
    asserts:
    - equal:
        path: spec.triggers[0].template.http.url
        value: https://my.platform/api-events
    - equal:
        path: spec.triggers[1].template.http.url
        value: https://my.platform/api-events
    - equal:
        path: spec.triggers[2].template.http.url
        value: https://my.platform/api-events

  - it: Setting various container specs - workflow reporter
    template: 'event-reporters/workflow-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.workflow.sensor:
        replicas: 2
        resources:
          requests:
            memory: 1Gi
        env:
          DEBUG_LOG: "true"
        tolerations:
        - key: "example-key"
          operator: "Exists"
          effect: "NoSchedule"
        nodeSelector:
          region: east
          type: user-node
        affinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
    asserts:
    - equal:
        path: spec.replicas
        value: 2
    - equal:
        path: spec.template.container.env
        value:
          - name: DEBUG_LOG
            value: "true"
    - equal:
        path: spec.template.container.resources
        value:
          requests:
            memory: 1Gi
    - equal:
        path: spec.template.tolerations
        value:
          - key: "example-key"
            operator: "Exists"
            effect: "NoSchedule"
    - equal:
        path: spec.template.nodeSelector
        value:
          region: east
          type: user-node

  - it: Setting various container specs - rollout reporter
    template: 'event-reporters/rollout-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.rollout.sensor:
        replicas: 2
        resources:
          requests:
            memory: 1Gi
        env:
          DEBUG_LOG: "true"
        tolerations:
        - key: "example-key"
          operator: "Exists"
          effect: "NoSchedule"
        nodeSelector:
          region: east
          type: user-node
        affinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
    asserts:
    - equal:
        path: spec.replicas
        value: 2
    - equal:
        path: spec.template.container.env
        value:
          - name: DEBUG_LOG
            value: "true"
    - equal:
        path: spec.template.container.resources
        value:
          requests:
            memory: 1Gi
    - equal:
        path: spec.template.tolerations
        value:
          - key: "example-key"
            operator: "Exists"
            effect: "NoSchedule"
    - equal:
        path: spec.template.nodeSelector
        value:
          region: east
          type: user-node

  - it: Logging without interval works - workflow reporter
    template: 'event-reporters/workflow-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.workflow.sensor:
        logging:
          enabled: true
    asserts:
    - contains:
        path: spec.triggers
        content:
          template:
            log: {}
            name: log-trigger

  - it: Logging without interval works - rollout reporter
    template: 'event-reporters/rollout-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.rollout.sensor:
        logging:
          enabled: true
    asserts:
    - contains:
        path: spec.triggers
        content:
          template:
            log: {}
            name: log-trigger

  - it: Logging with interval works - workflow reporter
    template: 'event-reporters/workflow-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.workflow.sensor:
        logging:
          intervalSeconds: 60
          enabled: true
    asserts:
    - contains:
        path: spec.triggers
        content:
          template:
            log:
              intervalSeconds: 60
            name: log-trigger

  - it: HTTP trigger contains retries if set - workflow reporter
    template: 'event-reporters/workflow-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.workflow.sensor:
        retryStrategy:
          steps: 3
          duration: 1
          factor: 1.2
          jitter: 3
    asserts:
    - equal:
        path: spec.triggers[0].retryStrategy
        value:
          steps: 3
          duration: 1
          factor: 1.2
          jitter: 3

  - it: HTTP trigger contains retries if set - rollout reporter
    template: 'event-reporters/rollout-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.rollout.sensor:
        retryStrategy:
          steps: 3
          duration: 1
          factor: 1.2
          jitter: 3
    asserts:
    - equal:
        path: spec.triggers[0].retryStrategy
        value:
          steps: 3
          duration: 1
          factor: 1.2
          jitter: 3
    - equal:
        path: spec.triggers[1].retryStrategy
        value:
          steps: 3
          duration: 1
          factor: 1.2
          jitter: 3
    - equal:
        path: spec.triggers[2].retryStrategy
        value:
          steps: 3
          duration: 1
          factor: 1.2
          jitter: 3

  - it: HTTP trigger contains policy if set - workflow reporter
    template: 'event-reporters/workflow-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.workflow.sensor:
        policy:
          status:
            allow:
              - 200
    asserts:
    - equal:
        path: spec.triggers[0].policy
        value:
          status:
            allow:
              - 200

  - it: HTTP trigger contains atLeastOnce if unset - rollout reporter
    template: 'event-reporters/rollout-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.workflow.sensor:
        atLeastOnce: false
    asserts:
    - equal:
        path: spec.triggers[0].atLeastOnce
        value: false


  - it: HTTP trigger contains atLeastOnce if unset - workflow reporter
    template: 'event-reporters/workflow-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      event-reporters.workflow.sensor:
        atLeastOnce: false
    asserts:
    - equal:
        path: spec.triggers[0].atLeastOnce
        value: false

  - it: uses the correct eventBusName if type is jetstream - rollout reporter
    template: 'event-reporters/rollout-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      global.runtime.eventBus.type: jetstream
    asserts:
    - equal:
        path: spec.eventBusName
        value: codefresh-eventbus-jetstream

  - it: uses the correct eventBusName if type is jetstream - workflow reporter
    template: 'event-reporters/workflow-reporter/sensor.yaml'
    values:
    - './values/mandatory-values.yaml'
    set:
      global.runtime.eventBus.type: jetstream
    asserts:
    - equal:
        path: spec.eventBusName
        value: codefresh-eventbus-jetstream
