# -----------------------------------------------------------------------------
# startup.yaml - KUTTL TestSuite for Codefresh GitOps Operator Component Tests
#
# This TestSuite automates the setup of required services and environments for
# component-level testing of the Codefresh GitOps Operator. It uses Helm and
# kubectl commands to install dependencies, wait for readiness, and patch
# deployments as needed.
#
# Steps performed:
#   - Installs Mockserver and waits for it to become available.
#   - Installs Gitea with custom values and waits for readiness.
#   - Runs initialization scripts in the background.
#   - Installs the Codefresh GitOps Runtime via Helm.
#   - Patches the gitops-operator deployment to inject the NAMESPACE env var.
#   - Waits for cap-app-proxy and gitops-operator deployments to be available.
#   - Creates 'dev' and 'prod' namespaces.
#   - Applies application fixtures for testing.
#
# Test directories and timeouts are configured at the end of the file.
# -----------------------------------------------------------------------------
apiVersion: kuttl.dev/v1beta1
kind: TestSuite
commands:
  - command: helm upgrade --install --namespace mockserver --create-namespace --version 5.14.0 --set="service.type=ClusterIP" mockserver mockserver/mockserver
  - command: kubectl -n mockserver wait --for=condition=available --timeout=120s deployment/mockserver
  - command: helm install gitea oci://registry-1.docker.io/giteacharts/gitea --version 10.1.0 --values ./setup/values/gitea.values.yaml -n gitea --create-namespace
  - command: kubectl -n gitea wait --for=condition=available --timeout=180s deployment/gitea
  - script: ./setup/scripts/init.sh
    background: true
  - command: sleep 3
  - command: ./setup/scripts/helm-deps.sh
  - command: helm upgrade --install cf-gitops-runtime ../../charts/gitops-runtime --create-namespace --namespace codefresh -f ./setup/values/runtime.values.yaml 
  - command: >
      kubectl patch deployment gitops-operator -n codefresh --type=json -p='[{"op": "add", "path": "/spec/template/spec/containers/0/env/-", "value": {"name": "NAMESPACE", "valueFrom": {"fieldRef": {"fieldPath": "metadata.namespace"}}}}]'
  - command: kubectl -n codefresh wait --for=condition=available --timeout=400s deployment/cap-app-proxy
  - command: kubectl -n codefresh wait --for=condition=available --timeout=180s deployment/gitops-operator
  - command: kubectl create namespace dev
  - command: kubectl create namespace prod 
  - command: kubectl apply -f ./setup/fixture/applications
testDirs:
  - promotion
timeout: 300