# Default values for simple-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: wang/alpine-go-echo-server
  # sed -i -e "s/^\(  tag:\).*/\1 $CI_COMMIT_SHA/" ops/values.yaml
  tag: latest
  pullPolicy: IfNotPresent
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
components:
  - test1
app:
  name: my-app-name
  command:
    - "/app/echo-server"
  port: 3000
  ## Enabled 'ports' If additional ports are needed
  # ports:
  #   - name: port2
  #     containerPort: 3002
  #     protocol: TCP
  #   - name: port3
  #     containerPort: 3003
  #     protocol: UDP
  config:
    test_env: "This is test value"
  secrets: false # To enable secretRef, you need create a secret named as RELEASE-NAME-secrets
  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: http
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: http
  volumeMounts: []
  # - name: demo-data
  #   mountPath: /mnt/data
  #   readonly: true
sidecar:
  name: my-app-name-sidecar
  enabled: false
  image:
    tag: 0.1
    repository: wang/alpine-go-echo-server
    pullPolicy: IfNotPresent
  port: 3001
  command:
    - "/app/echo-server"
  volumeMounts: []
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
volumes: []
# - name: demo-data
#   secret:
#     secretName: demo-secrets

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  port: 80
  ## Enable 'ports', if additional ports are needed
  # ports:
  #   - name: port2
  #     port: 3002
  #     targetPort: port2
  #     protocol: TCP
  #   - name: port3
  #     port: 3003
  #     targetPort: port3
  #     protocol: UDP
ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts:
    - host: chart-example.local
      paths: []
      #  - /
      #  - /index.html
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}
